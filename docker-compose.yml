version: "3.8"

services:
  mgmtworker:
    container_name: mgmtworker
    build: mgmtworker
    depends_on:
      - rabbitmq
      - config
    volumes:
      - ssl:/etc/cloudify/ssl:ro
      - mgmtworker_workdir:/opt/mgmtworker/work
      - ./resources/rest-service/cloudify/types:/opt/manager/resources/cloudify/types
    networks:
      - cloudify
    restart: unless-stopped

  certs_creator:
    container_name: certs
    build:
      context: rest-service
      ssh:
        - default
    networks:
      - cloudify
    volumes:
      - ssl:/ssl
    entrypoint: /opt/rest-service/docker/entrypoint_certs.sh

  rest_service:
    container_name: rest_service
    build:
      context: rest-service
      ssh:
        - default
    depends_on:
      - postgresql
    networks:
      - cloudify
    volumes:
      - manager_config:/opt/manager
    restart: unless-stopped

  execution_scheduler:
    container_name: execution_scheduler
    build: execution-scheduler
    depends_on:
      - postgresql
    networks:
      - cloudify
    restart: unless-stopped

  nginx:
    container_name: nginx
    build: nginx
    depends_on:
      - rest_service
      - certs_creator
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ssl:/etc/cloudify/ssl:ro
    networks:
      - cloudify
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    build: rabbitmq
    volumes:
      - ssl:/etc/cloudify/ssl:ro
    networks:
      - cloudify
    depends_on:
      - certs_creator
    restart: unless-stopped

  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_DB: cloudify_db
      POSTGRES_USER: cloudify
      POSTGRES_PASSWORD: cloudify
    volumes:
      - ./packaging/db-schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - cloudify
    restart: unless-stopped

  config:
    container_name: config
    build:
      context: rest-service
      ssh:
        - default
    depends_on:
      - postgresql
      - certs_creator
      - rabbitmq
    networks:
      - cloudify
    volumes:
      - manager_config:/opt/manager
      - ssl:/etc/cloudify/ssl:ro
      - mgmtworker_workdir:/mgmtworker
    entrypoint: /opt/rest-service/docker/entrypoint_config.sh

networks:
  cloudify:
    driver: bridge
    name: cloudify

volumes:
  ssl:
  manager_config:
  mgmtworker_workdir:
