version: "3.8"

services:
  mgmtworker:
    container_name: mgmtworker
    build: mgmtworker
    depends_on:
      - rabbitmq
      - config
    volumes:
      - ssl:/etc/cloudify/ssl:ro
      - mgmtworker_workdir:/opt/mgmtworker/work
      - ./resources/rest-service/cloudify/types:/opt/manager/resources/cloudify/types
    networks:
      - cloudify
    restart: unless-stopped

  certs_creator:
    container_name: certs
    build:
      context: rest-service
      ssh:
        - default
    networks:
      - cloudify
    volumes:
      - ssl:/ssl
    entrypoint: /opt/rest-service/docker/entrypoint_certs.sh

  rest_service:
    container_name: rest_service
    build:
      context: rest-service
      ssh:
        - default
    depends_on:
      - postgresql
    networks:
      - cloudify
    volumes:
      - manager_config:/opt/manager
    restart: unless-stopped

  execution_scheduler:
    container_name: execution_scheduler
    build: execution-scheduler
    depends_on:
      - postgresql
    networks:
      - cloudify
    restart: unless-stopped

  nginx:
    container_name: nginx
    build: service_containers/nginx
    depends_on:
      - rest_service
      - certs_creator
      - stage_frontend
      - stage_backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ssl:/etc/cloudify/ssl:ro
    networks:
      - cloudify
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    build: service_containers/rabbitmq
    volumes:
      - ssl:/etc/cloudify/ssl:ro
    networks:
      - cloudify
    depends_on:
      - certs_creator
    restart: unless-stopped

  postgresql:
    container_name: postgresql
    build: service_containers/postgresql
    environment:
      POSTGRES_DB: cloudify_db
      POSTGRES_USER: cloudify
      POSTGRES_PASSWORD: cloudify
    networks:
      - cloudify
    restart: unless-stopped

  fileserver:
    container_name: fileserver
    build: service_containers/fileserver
    volumes:
      - ./fileserver/minio/data:/data
    ports:
      - "9000:9000"
      - "9090:9090"
    networks:
      - cloudify
    restart: unless-stopped

  config:
    container_name: config
    build:
      context: rest-service
      ssh:
        - default
    environment:
      ENTRYPOINT: localhost
    depends_on:
      - postgresql
      - certs_creator
      - rabbitmq
    networks:
      - cloudify
    volumes:
      - manager_config:/opt/manager
      - ssl:/etc/cloudify/ssl:ro
      - mgmtworker_workdir:/mgmtworker
    entrypoint: /opt/rest-service/docker/entrypoint_config.sh
    restart: on-failure

  stage_frontend:
    container_name: stage_frontend
    image: stage_frontend
    networks:
      - cloudify

  stage_backend:
    container_name: stage_backend
    image: stage_backend
    environment:
      RESTSERVICE_ADDRESS: nginx
    networks:
      - cloudify
    volumes:
      - ssl:/etc/cloudify/ssl:ro
    restart: on-failure

networks:
  cloudify:
    driver: bridge
    name: cloudify

volumes:
  ssl:
  manager_config:
  mgmtworker_workdir:
