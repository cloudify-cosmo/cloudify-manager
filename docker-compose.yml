version: "3.8"

services:
#  mgmtworker:
#    container_name: mgmtworker
#    build: mgmtworker
#    env_file:
#      - .env
#    volumes:
#      - ../cloudify_internal_ca_cert.pem:/opt/mgmtworker/cloudify_internal_ca_cert.pem
#      - ./resources/rest-service/cloudify/types:/opt/manager/resources/cloudify/types
#    networks:
#      - cloudify
#    restart: unless-stopped

  rest_service:
    container_name: rest_service
    build:
      context: rest-service
      ssh:
        - default
    depends_on:
      - postgresql
    networks:
      - cloudify
    restart: unless-stopped

  execution_scheduler:
    container_name: execution_scheduler
    build: execution-scheduler
    depends_on:
      - postgresql
    networks:
      - cloudify
    restart: unless-stopped

  nginx:
    container_name: nginx
    build: nginx
    depends_on:
      - rest_service
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/cloudify/ssl
    networks:
      - cloudify
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    build: rabbitmq
    volumes:
      - ./ssl:/etc/cloudify/ssl:ro
    networks:
      - cloudify
    restart: unless-stopped

  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_DB: cloudify_db
      POSTGRES_USER: cloudify
      POSTGRES_PASSWORD: cloudify
    volumes:
      - ./packaging/db-schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - cloudify
    restart: unless-stopped

  config:
    container_name: config
    build:
      context: rest-service
      ssh:
        - default
    depends_on:
      - postgresql
    networks:
      - cloudify
    entrypoint: python
    command: [ '-m', 'manager_rest.configure_manager' ]

networks:
  cloudify:
    driver: bridge
    name: cloudify
