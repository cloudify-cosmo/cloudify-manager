"""add aria tosca tables

Revision ID: 1c25381cac6c
Revises: 784a82cec07a
Create Date: 2017-12-04 17:09:39.421251

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.schema import Sequence, CreateSequence, DropSequence

# revision identifiers, used by Alembic.
revision = '1c25381cac6c'
down_revision = '784a82cec07a'
branch_labels = None
depends_on = None

SEQUENCE_NAMES = [
    'tosca_capability_id_seq',
    'tosca_capability_template_id_seq',
    'tosca_execution_id_seq',
    'tosca_group_id_seq',
    'tosca_group_template_id_seq',
    'tosca_interface_id_seq',
    'tosca_interface_template_id_seq',
    'tosca_metadata_id_seq',
    'tosca_node_id_seq',
    'tosca_node_template_id_seq',
    'tosca_operation_template_id_seq',
    'tosca_plugin_id_seq',
    'tosca_plugin_specification_id_seq',
    'tosca_policy_id_seq',
    'tosca_policy_template_id_seq',
    'tosca_relationship_id_seq',
    'tosca_relationship_template_id_seq',
    'tosca_requirement_template_id_seq',
    'tosca_service_id_seq',
    'tosca_service_template_id_seq',
    'tosca_substitution_id_seq',
    'tosca_substitution_template_id_seq',
    'tosca_task_id_seq',
    'tosca_type_id_seq',
]

ENUMS = {
    'tosca_node_state': sa.Enum(
        u'initial',
        u'creating',
        u'created',
        u'configuring',
        u'configured',
        u'starting',
        u'started',
        u'stopping',
        u'deleting',
        u'deleted',
        u'error',
        name='tosca_node_state',
    ),
    'tosca_execution_status': sa.Enum(
        u'terminated',
        u'failed',
        u'cancelled',
        u'pending',
        u'started',
        u'cancelling',
        u'force_cancelling',
        name='tosca_execution_status',
    ),
    'tosca_action_type': sa.Enum(
        u'add',
        u'remove',
        u'modify',
        name='tosca_action_type',
    ),
    'tosca_entity_type': sa.Enum(
        u'node',
        u'relationship',
        u'property',
        u'operation',
        u'workflow',
        u'output',
        u'description',
        u'group',
        u'policy_type',
        u'policy_trigger',
        u'plugin',
        name='tosca_entity_type',
    ),
    'tosca_status': sa.Enum(
        u'pending',
        u'retrying',
        u'sent',
        u'started',
        u'success',
        u'failed',
        name='tosca_status',
    ),
    'tosca_stub_type': sa.Enum(
        u'start_workflow',
        u'start_subworkflow',
        u'end_workflow',
        u'end_subworkflow',
        u'stub',
        u'conditional',
        name='tosca_stub_type',
    ),
    'tosca_service_modification_status': sa.Enum(
        u'started',
        u'finished',
        u'rolledback',
        name='tosca_service_modification_status',
    ),
}


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    for sequence_name in SEQUENCE_NAMES:
        op.execute(CreateSequence(Sequence(sequence_name)))

    op.create_table('tosca_type',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_type_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('variant', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('role', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('parent_type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['parent_type_fk'], [u'tosca_type.id'], name=u'tosca_type_parent_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_type_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_substitution_template',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_substitution_template_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('node_type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['node_type_fk'], [u'tosca_type.id'], name=u'tosca_substitution_template_node_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_substitution_template_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_service_template',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_service_template_id_seq'::regclass)"), nullable=False),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('main_file_name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('relationship_type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('interface_type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('policy_type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('artifact_type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('group_type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('capability_type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('substitution_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['artifact_type_fk'], [u'tosca_type.id'], name=u'tosca_service_template_artifact_type_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['capability_type_fk'], [u'tosca_type.id'], name=u'tosca_service_template_capability_type_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['group_type_fk'], [u'tosca_type.id'], name=u'tosca_service_template_group_type_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['interface_type_fk'], [u'tosca_type.id'], name=u'tosca_service_template_interface_type_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_type_fk'], [u'tosca_type.id'], name=u'tosca_service_template_node_type_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['policy_type_fk'], [u'tosca_type.id'], name=u'tosca_service_template_policy_type_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['relationship_type_fk'], [u'tosca_type.id'], name=u'tosca_service_template_relationship_type_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['substitution_template_fk'], [u'tosca_substitution_template.id'], name=u'tosca_service_template_substitution_template_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_service_template_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_node_template',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_node_template_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('directives', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('default_instances', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('min_instances', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('max_instances', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('target_node_template_constraints', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('service_template_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['service_template_fk'], [u'tosca_service_template.id'], name=u'tosca_node_template_service_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_node_template_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_node_template_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_substitution',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_substitution_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('node_type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('substitution_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['node_type_fk'], [u'tosca_type.id'], name=u'tosca_substitution_node_type_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['substitution_template_fk'], [u'tosca_substitution_template.id'], name=u'tosca_substitution_substitution_template_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_substitution_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_service',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_service_id_seq'::regclass)"), nullable=False),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('substitution_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('service_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['service_template_fk'], [u'tosca_service_template.id'], name=u'tosca_service_service_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['substitution_fk'], [u'tosca_substitution.id'], name=u'tosca_service_substitution_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_service_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_node',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_node_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('state', ENUMS['tosca_node_state'], autoincrement=False, nullable=False),
        sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_template_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('host_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('service_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['host_fk'], [u'tosca_node.id'], name=u'tosca_node_host_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_template_fk'], [u'tosca_node_template.id'], name=u'tosca_node_node_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['service_fk'], [u'tosca_service.id'], name=u'tosca_node_service_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_node_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_node_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_policy_template',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_policy_template_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('service_template_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['service_template_fk'], [u'tosca_service_template.id'], name=u'tosca_policy_template_service_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_policy_template_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_policy_template_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_policy',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_policy_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('service_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('policy_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['policy_template_fk'], [u'tosca_policy_template.id'], name=u'tosca_policy_policy_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['service_fk'], [u'tosca_service.id'], name=u'tosca_policy_service_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_policy_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_policy_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_policy_node',
        sa.Column('policy_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['node_id'], [u'tosca_node.id'], name=u'tosca_policy_node_node_id_fkey'),
        sa.ForeignKeyConstraint(['policy_id'], [u'tosca_policy.id'], name=u'tosca_policy_node_policy_id_fkey')
    )
    op.create_table('tosca_group_template',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_group_template_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('service_template_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['service_template_fk'], [u'tosca_service_template.id'], name=u'tosca_group_template_service_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_group_template_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_group_template_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_group',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_group_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('group_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('service_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['group_template_fk'], [u'tosca_group_template.id'], name=u'tosca_group_group_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['service_fk'], [u'tosca_service.id'], name=u'tosca_group_service_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_group_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_group_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_relationship_template',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_relationship_template_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_relationship_template_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_relationship_template_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_interface_template',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_interface_template_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('group_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('relationship_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['group_template_fk'], [u'tosca_group_template.id'], name=u'tosca_interface_template_group_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_template_fk'], [u'tosca_node_template.id'], name=u'tosca_interface_template_node_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['relationship_template_fk'], [u'tosca_relationship_template.id'], name=u'tosca_interface_template_relationship_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_interface_template_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_interface_template_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_requirement_template',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_requirement_template_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('target_capability_name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('target_node_template_constraints', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('relationship_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('target_capability_type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('target_node_type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('target_node_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_template_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['node_template_fk'], [u'tosca_node_template.id'], name=u'tosca_requirement_template_node_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['relationship_template_fk'], [u'tosca_relationship_template.id'], name=u'tosca_requirement_template_relationship_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['target_capability_type_fk'], [u'tosca_type.id'], name=u'tosca_requirement_template_target_capability_type_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['target_node_template_fk'], [u'tosca_node_template.id'], name=u'tosca_requirement_template_target_node_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['target_node_type_fk'], [u'tosca_type.id'], name=u'tosca_requirement_template_target_node_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_requirement_template_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_capability_template',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_capability_template_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('min_occurrences', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('max_occurrences', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('node_template_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['node_template_fk'], [u'tosca_node_template.id'], name=u'tosca_capability_template_node_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_capability_template_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_capability_template_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_capability',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_capability_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('min_occurrences', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('max_occurrences', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('occurrences', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('node_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('capability_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['capability_template_fk'], [u'tosca_capability_template.id'], name=u'tosca_capability_capability_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_fk'], [u'tosca_node.id'], name=u'tosca_capability_node_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_capability_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_capability_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_relationship',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_relationship_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('source_position', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('target_position', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('relationship_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('source_node_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('target_node_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('target_capability_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('requirement_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['relationship_template_fk'], [u'tosca_relationship_template.id'], name=u'tosca_relationship_relationship_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['requirement_template_fk'], [u'tosca_requirement_template.id'], name=u'tosca_relationship_requirement_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['source_node_fk'], [u'tosca_node.id'], name=u'tosca_relationship_source_node_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['target_capability_fk'], [u'tosca_capability.id'], name=u'tosca_relationship_target_capability_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['target_node_fk'], [u'tosca_node.id'], name=u'tosca_relationship_target_node_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_relationship_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_relationship_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_interface',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_interface_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('relationship_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('group_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('node_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('interface_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['group_fk'], [u'tosca_group.id'], name=u'tosca_interface_group_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['interface_template_fk'], [u'tosca_interface_template.id'], name=u'tosca_interface_interface_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_fk'], [u'tosca_node.id'], name=u'tosca_interface_node_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['relationship_fk'], [u'tosca_relationship.id'], name=u'tosca_interface_relationship_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_interface_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_interface_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_plugin',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_plugin_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('archive_name', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('distribution', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('distribution_release', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('distribution_version', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('package_name', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('package_source', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('package_version', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('supported_platform', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('supported_py_versions', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('wheels', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('id', name=u'tosca_plugin_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_plugin_specification',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_plugin_specification_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('version', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column('service_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('plugin_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['plugin_fk'], [u'tosca_plugin.id'], name=u'tosca_plugin_specification_plugin_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['service_template_fk'], [u'tosca_service_template.id'], name=u'tosca_plugin_specification_service_template_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_plugin_specification_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_operation_template',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_operation_template_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('relationship_edge', sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column('implementation', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('dependencies', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('function', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('executor', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('max_attempts', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('retry_interval', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('plugin_specification_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('service_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('interface_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['interface_template_fk'], [u'tosca_interface_template.id'], name=u'tosca_operation_template_interface_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['plugin_specification_fk'], [u'tosca_plugin_specification.id'], name=u'tosca_operation_template_plugin_specification_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['service_template_fk'], [u'tosca_service_template.id'], name=u'tosca_operation_template_service_template_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_operation_template_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_operation',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('relationship_edge', sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column('implementation', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('dependencies', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('function', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('executor', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('max_attempts', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('retry_interval', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('interface_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('plugin_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('service_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('operation_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['interface_fk'], [u'tosca_interface.id'], name=u'tosca_operation_interface_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['operation_template_fk'], [u'tosca_operation_template.id'], name=u'tosca_operation_operation_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['plugin_fk'], [u'tosca_plugin.id'], name=u'tosca_operation_plugin_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['service_fk'], [u'tosca_service.id'], name=u'tosca_operation_service_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_operation_pkey')
    )
    op.create_table('tosca_configuration',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('type_name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('_value', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('operation_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('operation_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['operation_fk'], [u'tosca_operation.id'], name=u'tosca_configuration_operation_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['operation_template_fk'], [u'tosca_operation_template.id'], name=u'tosca_configuration_operation_template_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_configuration_pkey')
    )
    op.create_table('tosca_substitution_mapping',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('node_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('capability_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('requirement_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('substitution_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['capability_fk'], [u'tosca_capability.id'], name=u'tosca_substitution_mapping_capability_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_fk'], [u'tosca_node.id'], name=u'tosca_substitution_mapping_node_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['requirement_template_fk'], [u'tosca_requirement_template.id'], name=u'tosca_substitution_mapping_requirement_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['substitution_fk'], [u'tosca_substitution.id'], name=u'tosca_substitution_mapping_substitution_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_substitution_mapping_pkey')
    )
    op.create_table('tosca_execution',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_execution_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('ended_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('error', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('status', ENUMS['tosca_execution_status'], autoincrement=False, nullable=True),
        sa.Column('workflow_name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('service_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['service_fk'], [u'tosca_service.id'], name=u'tosca_execution_service_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_execution_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_service_update',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('service_plan', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('service_update_nodes', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('service_update_service', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('service_update_node_templates', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('modified_entity_ids', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('service_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('execution_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['execution_fk'], [u'tosca_execution.id'], name=u'tosca_service_update_execution_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['service_fk'], [u'tosca_service.id'], name=u'tosca_service_update_service_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_service_update_pkey')
    )
    op.create_table('tosca_service_update_step',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('action', ENUMS['tosca_action_type'], autoincrement=False, nullable=False),
        sa.Column('entity_id', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('entity_type', ENUMS['tosca_entity_type'], autoincrement=False, nullable=False),
        sa.Column('service_update_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['service_update_fk'], [u'tosca_service_update.id'], name=u'tosca_service_update_step_service_update_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_service_update_step_pkey')
    )
    op.create_table('tosca_artifact_template',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('source_path', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('target_path', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('repository_url', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('repository_credential', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('node_template_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['node_template_fk'], [u'tosca_node_template.id'], name=u'tosca_artifact_template_node_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_artifact_template_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_artifact_template_pkey')
    )
    op.create_table('tosca_artifact',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('source_path', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('target_path', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('repository_url', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('repository_credential', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('artifact_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('type_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('node_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['artifact_template_fk'], [u'tosca_artifact_template.id'], name=u'tosca_artifact_artifact_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_fk'], [u'tosca_node.id'], name=u'tosca_artifact_node_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['type_fk'], [u'tosca_type.id'], name=u'tosca_artifact_type_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_artifact_pkey')
    )
    op.create_table('tosca_property',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('type_name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('_value', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('group_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('relationship_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('relationship_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('capability_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('group_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('artifact_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('policy_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('capability_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('artifact_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('policy_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['artifact_fk'], [u'tosca_artifact.id'], name=u'tosca_property_artifact_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['artifact_template_fk'], [u'tosca_artifact_template.id'], name=u'tosca_property_artifact_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['capability_fk'], [u'tosca_capability.id'], name=u'tosca_property_capability_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['capability_template_fk'], [u'tosca_capability_template.id'], name=u'tosca_property_capability_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['group_fk'], [u'tosca_group.id'], name=u'tosca_property_group_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['group_template_fk'], [u'tosca_group_template.id'], name=u'tosca_property_group_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_fk'], [u'tosca_node.id'], name=u'tosca_property_node_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_template_fk'], [u'tosca_node_template.id'], name=u'tosca_property_node_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['policy_fk'], [u'tosca_policy.id'], name=u'tosca_property_policy_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['policy_template_fk'], [u'tosca_policy_template.id'], name=u'tosca_property_policy_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['relationship_fk'], [u'tosca_relationship.id'], name=u'tosca_property_relationship_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['relationship_template_fk'], [u'tosca_relationship_template.id'], name=u'tosca_property_relationship_template_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_property_pkey')
    )
    op.create_table('tosca_group_node',
        sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['group_id'], [u'tosca_group.id'], name=u'tosca_group_node_group_id_fkey'),
        sa.ForeignKeyConstraint(['node_id'], [u'tosca_node.id'], name=u'tosca_group_node_node_id_fkey')
    )
    op.create_table('tosca_attribute',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('type_name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('_value', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('node_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['node_fk'], [u'tosca_node.id'], name=u'tosca_attribute_node_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_template_fk'], [u'tosca_node_template.id'], name=u'tosca_attribute_node_template_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_attribute_pkey')
    )
    op.create_table('tosca_task',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_task_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('status', ENUMS['tosca_status'], autoincrement=False, nullable=True),
        sa.Column('due_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('ended_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('attempts_count', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('function', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('max_attempts', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('retry_interval', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('ignore_failure', sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column('interface_name', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('operation_name', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('_api_id', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('_executor', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('_context_cls', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('_stub_type', ENUMS['tosca_stub_type'], autoincrement=False, nullable=True),
        sa.Column('plugin_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('execution_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('relationship_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['execution_fk'], [u'tosca_execution.id'], name=u'tosca_task_execution_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['node_fk'], [u'tosca_node.id'], name=u'tosca_task_node_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['plugin_fk'], [u'tosca_plugin.id'], name=u'tosca_task_plugin_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['relationship_fk'], [u'tosca_relationship.id'], name=u'tosca_task_relationship_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_task_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_group_template_node_template',
        sa.Column('group_template_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_template_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['group_template_id'], [u'tosca_group_template.id'], name=u'tosca_group_template_node_template_group_template_id_fkey'),
        sa.ForeignKeyConstraint(['node_template_id'], [u'tosca_node_template.id'], name=u'tosca_group_template_node_template_node_template_id_fkey')
    )
    op.create_table('tosca_output',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('type_name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('_value', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('service_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('service_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['service_fk'], [u'tosca_service.id'], name=u'tosca_output_service_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['service_template_fk'], [u'tosca_service_template.id'], name=u'tosca_output_service_template_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_output_pkey')
    )
    op.create_table('tosca_task_task',
        sa.Column('task_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('task_self_ref_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['task_id'], [u'tosca_task.id'], name=u'tosca_task_task_task_id_fkey'),
        sa.ForeignKeyConstraint(['task_self_ref_id'], [u'tosca_task.id'], name=u'tosca_task_task_task_self_ref_id_fkey')
    )
    op.create_table('tosca_metadata',
        sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('tosca_metadata_id_seq'::regclass)"), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('value', sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name=u'tosca_metadata_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('tosca_service_template_metadata',
        sa.Column('service_template_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('metadata_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['metadata_id'], [u'tosca_metadata.id'], name=u'tosca_service_template_metadata_metadata_id_fkey'),
        sa.ForeignKeyConstraint(['service_template_id'], [u'tosca_service_template.id'], name=u'tosca_service_template_metadata_service_template_id_fkey')
    )
    op.create_table('tosca_substitution_template_mapping',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('capability_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('requirement_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('substitution_template_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['capability_template_fk'], [u'tosca_capability_template.id'], name=u'tosca_substitution_template_mapping_capability_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['requirement_template_fk'], [u'tosca_requirement_template.id'], name=u'tosca_substitution_template_mappin_requirement_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['substitution_template_fk'], [u'tosca_substitution_template.id'], name=u'tosca_substitution_template_mappi_substitution_template_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_substitution_template_mapping_pkey')
    )
    op.create_table('tosca_service_plugin',
        sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('plugin_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['plugin_id'], [u'tosca_plugin.id'], name=u'tosca_service_plugin_plugin_id_fkey'),
        sa.ForeignKeyConstraint(['service_id'], [u'tosca_service.id'], name=u'tosca_service_plugin_service_id_fkey')
    )
    op.create_table('tosca_input',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('type_name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('_value', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('required', sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column('interface_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('service_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('service_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('operation_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('task_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('execution_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('interface_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('operation_template_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['execution_fk'], [u'tosca_execution.id'], name=u'tosca_input_execution_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['interface_fk'], [u'tosca_interface.id'], name=u'tosca_input_interface_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['interface_template_fk'], [u'tosca_interface_template.id'], name=u'tosca_input_interface_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['operation_fk'], [u'tosca_operation.id'], name=u'tosca_input_operation_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['operation_template_fk'], [u'tosca_operation_template.id'], name=u'tosca_input_operation_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['service_fk'], [u'tosca_service.id'], name=u'tosca_input_service_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['service_template_fk'], [u'tosca_service_template.id'], name=u'tosca_input_service_template_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['task_fk'], [u'tosca_task.id'], name=u'tosca_input_task_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_input_pkey')
    )
    op.create_table('tosca_log',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('level', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('msg', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('task_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('execution_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['execution_fk'], [u'tosca_execution.id'], name=u'tosca_log_execution_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['task_fk'], [u'tosca_task.id'], name=u'tosca_log_task_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_log_pkey')
    )
    op.create_table('tosca_service_modification',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('context', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('ended_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('modified_node_templates', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('nodes', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('status', ENUMS['tosca_service_modification_status'], autoincrement=False, nullable=True),
        sa.Column('service_fk', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['service_fk'], [u'tosca_service.id'], name=u'tosca_service_modification_service_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_service_modification_pkey')
    )
    op.create_table('tosca_argument',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('type_name', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('_value', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('task_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('operation_fk', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['operation_fk'], [u'tosca_operation.id'], name=u'tosca_argument_operation_fk_fkey', ondelete=u'CASCADE'),
        sa.ForeignKeyConstraint(['task_fk'], [u'tosca_task.id'], name=u'tosca_argument_task_fk_fkey', ondelete=u'CASCADE'),
        sa.PrimaryKeyConstraint('id', name=u'tosca_argument_pkey')
    )
    op.create_table('tosca_policy_template_group_template',
        sa.Column('policy_template_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('group_template_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['group_template_id'], [u'tosca_group_template.id'], name=u'tosca_policy_template_group_template_group_template_id_fkey'),
        sa.ForeignKeyConstraint(['policy_template_id'], [u'tosca_policy_template.id'], name=u'tosca_policy_template_group_template_policy_template_id_fkey')
    )
    op.create_table('tosca_service_metadata',
        sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('metadata_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['metadata_id'], [u'tosca_metadata.id'], name=u'tosca_service_metadata_metadata_id_fkey'),
        sa.ForeignKeyConstraint(['service_id'], [u'tosca_service.id'], name=u'tosca_service_metadata_service_id_fkey')
    )
    op.create_table('tosca_policy_group',
        sa.Column('policy_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['group_id'], [u'tosca_group.id'], name=u'tosca_policy_group_group_id_fkey'),
        sa.ForeignKeyConstraint(['policy_id'], [u'tosca_policy.id'], name=u'tosca_policy_group_policy_id_fkey')
    )
    op.create_table('tosca_valid_sources_capability_template_type',
        sa.Column('capability_template_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['capability_template_id'], [u'tosca_capability_template.id'], name=u'tosca_valid_sources_capability_temp_capability_template_id_fkey'),
        sa.ForeignKeyConstraint(['type_id'], [u'tosca_type.id'], name=u'tosca_valid_sources_capability_template_type_type_id_fkey')
    )
    op.create_table('tosca_policy_template_node_template',
        sa.Column('policy_template_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('node_template_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['node_template_id'], [u'tosca_node_template.id'], name=u'tosca_policy_template_node_template_node_template_id_fkey'),
        sa.ForeignKeyConstraint(['policy_template_id'], [u'tosca_policy_template.id'], name=u'tosca_policy_template_node_template_policy_template_id_fkey')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    table_names = [
        'tosca_policy_template_node_template',
        'tosca_valid_sources_capability_template_type',
        'tosca_policy_group',
        'tosca_service_metadata',
        'tosca_policy_template_group_template',
        'tosca_argument',
        'tosca_service_modification',
        'tosca_log',
        'tosca_input',
        'tosca_service_plugin',
        'tosca_substitution_template_mapping',
        'tosca_service_template_metadata',
        'tosca_metadata',
        'tosca_task_task',
        'tosca_output',
        'tosca_group_template_node_template',
        'tosca_task',
        'tosca_attribute',
        'tosca_group_node',
        'tosca_property',
        'tosca_artifact',
        'tosca_artifact_template',
        'tosca_service_update_step',
        'tosca_service_update',
        'tosca_execution',
        'tosca_substitution_mapping',
        'tosca_configuration',
        'tosca_operation',
        'tosca_operation_template',
        'tosca_plugin_specification',
        'tosca_plugin',
        'tosca_interface',
        'tosca_relationship',
        'tosca_capability',
        'tosca_capability_template',
        'tosca_requirement_template',
        'tosca_interface_template',
        'tosca_relationship_template',
        'tosca_group',
        'tosca_group_template',
        'tosca_policy_node',
        'tosca_policy',
        'tosca_policy_template',
        'tosca_node',
        'tosca_service',
        'tosca_substitution',
        'tosca_node_template',
        'tosca_service_template',
        'tosca_substitution_template',
        'tosca_type',
    ]
    for table_name in table_names:
        op.drop_table(table_name)

    for enum in ENUMS.values():
        enum.drop(op.get_bind())

    for sequence_name in SEQUENCE_NAMES:
        op.execute(DropSequence(Sequence(sequence_name)))

    # ### end Alembic commands ###
