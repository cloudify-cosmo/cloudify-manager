"""4.0.1

Revision ID: 9aa6f74c9653
Revises: 333998bc1627
Create Date: 2017-04-26 13:16:33.880756

"""
from alembic import op
import sqlalchemy as sa
import manager_rest     # Adding this manually


# revision identifiers, used by Alembic.
revision = '9aa6f74c9653'
down_revision = '333998bc1627'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('owners_secrets_users')
    op.drop_table('owners_snapshots_users')
    op.drop_table('viewers_executions_users')
    op.drop_table('viewers_snapshots_users')
    op.drop_table('viewers_plugins_users')
    op.drop_table('viewers_blueprints_users')
    op.drop_table('owners_plugins_users')
    op.drop_table('viewers_deployments_users')
    op.drop_table('owners_blueprints_users')
    op.drop_table('viewers_secrets_users')
    op.drop_table('owners_executions_users')
    op.drop_table('owners_deployments_users')
    op.add_column(
        'blueprints',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index('ix_blueprints_created_at', table_name='blueprints')
    op.drop_index('ix_blueprints_id', table_name='blueprints')
    op.add_column(
        'deployment_modifications',
        sa.Column('_creator_id', sa.Integer(), nullable=False),
    )
    op.add_column(
        'deployment_modifications',
        sa.Column('_tenant_id', sa.Integer(), nullable=False),
    )
    op.add_column(
        'deployment_modifications',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index(
        'ix_deployment_modifications_created_at',
        table_name='deployment_modifications',
    )
    op.drop_index(
        'ix_deployment_modifications_ended_at',
        table_name='deployment_modifications',
    )
    op.drop_index(
        'ix_deployment_modifications_id',
        table_name='deployment_modifications')
    op.create_foreign_key(
        op.f('deployment_modifications__tenant_id_fkey'),
        'deployment_modifications',
        'tenants',
        ['_tenant_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.create_foreign_key(
        op.f('deployment_modifications__creator_id_fkey'),
        'deployment_modifications',
        'users',
        ['_creator_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.add_column(
        'deployment_update_steps',
        sa.Column('_creator_id', sa.Integer(), nullable=False),
    )
    op.add_column(
        'deployment_update_steps',
        sa.Column('_tenant_id', sa.Integer(), nullable=False),
    )
    op.add_column(
        'deployment_update_steps',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index(
        'ix_deployment_update_steps_id', table_name='deployment_update_steps')
    op.create_foreign_key(
        op.f('deployment_update_steps__tenant_id_fkey'),
        'deployment_update_steps',
        'tenants',
        ['_tenant_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.create_foreign_key(
        op.f('deployment_update_steps__creator_id_fkey'),
        'deployment_update_steps',
        'users',
        ['_creator_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.add_column(
        'deployment_updates',
        sa.Column('_creator_id', sa.Integer(), nullable=False),
    )
    op.add_column(
        'deployment_updates',
        sa.Column('_tenant_id', sa.Integer(), nullable=False),
    )
    op.add_column(
        'deployment_updates',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index(
        'ix_deployment_updates_created_at',
        table_name='deployment_updates',
    )
    op.drop_index('ix_deployment_updates_id', table_name='deployment_updates')
    op.create_foreign_key(
        op.f('deployment_updates__creator_id_fkey'),
        'deployment_updates',
        'users',
        ['_creator_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.create_foreign_key(
        op.f('deployment_updates__tenant_id_fkey'),
        'deployment_updates',
        'tenants',
        ['_tenant_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.add_column(
        'deployments',
        sa.Column('_tenant_id', sa.Integer(), nullable=True),
    )
    op.execute(
        'UPDATE deployments '
        'SET _tenant_id = blueprints._tenant_id '
        'FROM blueprints '
        'WHERE deployments._blueprint_fk = blueprints._storage_id'
    )
    op.alter_column('deployments', '_tenant_id', nullable=False),
    op.add_column(
        'deployments',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index('ix_deployments_created_at', table_name='deployments')
    op.drop_index('ix_deployments_id', table_name='deployments')
    op.create_foreign_key(
        op.f('deployments__tenant_id_fkey'),
        'deployments',
        'tenants',
        ['_tenant_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.add_column(
        'events',
        sa.Column('_creator_id', sa.Integer(), nullable=True),
    )
    op.add_column(
        'events',
        sa.Column('_tenant_id', sa.Integer(), nullable=True),
    )
    op.add_column(
        'events',
        sa.Column(
            'reported_timestamp',
            manager_rest.storage.models_base.LocalDateTime(),
            nullable=True,
        ),
    )
    op.execute(
        'UPDATE events '
        'SET '
        '_creator_id = executions._creator_id, '
        '_tenant_id = executions._tenant_id, '
        'reported_timestamp = timestamp '
        'FROM executions '
        'WHERE events._execution_fk = executions._storage_id'
    )
    op.alter_column('events', '_creator_id', nullable=False)
    op.alter_column('events', '_tenant_id', nullable=False)
    op.alter_column('events', 'reported_timestamp', nullable=False)
    op.alter_column(
        'events',
        'timestamp',
        server_default=sa.func.current_timestamp(),
        nullable=False,
    )
    op.add_column(
        'events',
        sa.Column(
            'error_causes',
            manager_rest.storage.models_base.JSONString(),
            nullable=True,
        ),
    )
    op.add_column(
        'events',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index('ix_events_id', table_name='events')
    op.create_foreign_key(
        op.f('events__tenant_id_fkey'),
        'events',
        'tenants',
        ['_tenant_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.create_foreign_key(
        op.f('events__creator_id_fkey'),
        'events',
        'users',
        ['_creator_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.add_column(
        'executions',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index('ix_executions_created_at', table_name='executions')
    op.drop_index('ix_executions_id', table_name='executions')
    op.drop_index('ix_groups_ldap_dn', table_name='groups')
    op.drop_index('ix_groups_name', table_name='groups')
    op.add_column(
        'logs',
        sa.Column('_creator_id', sa.Integer(), nullable=True),
    )
    op.add_column(
        'logs',
        sa.Column('_tenant_id', sa.Integer(), nullable=True),
    )
    op.add_column(
        'logs',
        sa.Column(
            'reported_timestamp',
            manager_rest.storage.models_base.LocalDateTime(),
            nullable=True,
        ),
    )
    op.execute(
        'UPDATE logs '
        'SET '
        '_creator_id = executions._creator_id, '
        '_tenant_id = executions._tenant_id, '
        'reported_timestamp = timestamp '
        'FROM executions '
        'WHERE logs._execution_fk = executions._storage_id'
    )
    op.alter_column('logs', '_creator_id', nullable=False)
    op.alter_column('logs', '_tenant_id', nullable=False)
    op.alter_column('logs', 'reported_timestamp', nullable=False)
    op.alter_column(
        'logs',
        'timestamp',
        server_default=sa.func.current_timestamp(),
        nullable=False,
    )
    op.add_column(
        'logs',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index('ix_logs_id', table_name='logs')
    op.create_foreign_key(
        op.f('logs__tenant_id_fkey'),
        'logs',
        'tenants',
        ['_tenant_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.create_foreign_key(
        op.f('logs__creator_id_fkey'),
        'logs',
        'users',
        ['_creator_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.add_column(
        'nodes',
        sa.Column('_creator_id', sa.Integer(), nullable=True),
    )
    op.add_column(
        'nodes',
        sa.Column('_tenant_id', sa.Integer(), nullable=True),
    )
    op.execute(
        'UPDATE nodes '
        'SET '
        '_creator_id = deployments._creator_id, '
        '_tenant_id = deployments._tenant_id '
        'FROM deployments '
        'WHERE nodes._deployment_fk = deployments._storage_id'
    )
    op.alter_column('nodes', '_creator_id', nullable=False)
    op.alter_column('nodes', '_tenant_id', nullable=False)
    op.add_column(
        'nodes',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index('ix_nodes_id', table_name='nodes')
    op.drop_index('ix_nodes_type', table_name='nodes')
    op.create_foreign_key(
        op.f('nodes__tenant_id_fkey'),
        'nodes',
        'tenants',
        ['_tenant_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.create_foreign_key(
        op.f('nodes__creator_id_fkey'),
        'nodes',
        'users',
        ['_creator_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.add_column(
        'node_instances',
        sa.Column('_creator_id', sa.Integer(), nullable=True),
    )
    op.add_column(
        'node_instances',
        sa.Column('_tenant_id', sa.Integer(), nullable=True),
    )
    op.execute(
        'UPDATE node_instances '
        'SET '
        '_creator_id = nodes._creator_id, '
        '_tenant_id = nodes._tenant_id '
        'FROM nodes '
        'WHERE node_instances._node_fk = nodes._storage_id'
    )
    op.alter_column('node_instances', '_creator_id', nullable=False)
    op.alter_column('node_instances', '_tenant_id', nullable=False)
    op.add_column(
        'node_instances',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index('ix_node_instances_id', table_name='node_instances')
    op.create_foreign_key(
        op.f('node_instances__creator_id_fkey'),
        'node_instances',
        'users',
        ['_creator_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.create_foreign_key(
        op.f('node_instances__tenant_id_fkey'),
        'node_instances',
        'tenants',
        ['_tenant_id'],
        ['id'],
        ondelete='CASCADE',
    )
    op.add_column(
        'plugins',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index('ix_plugins_archive_name', table_name='plugins')
    op.drop_index('ix_plugins_id', table_name='plugins')
    op.drop_index('ix_plugins_package_name', table_name='plugins')
    op.drop_index('ix_plugins_uploaded_at', table_name='plugins')
    op.drop_index('ix_roles_name', table_name='roles')
    op.add_column(
        'secrets',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index('ix_secrets_created_at', table_name='secrets')
    op.drop_index('ix_secrets_id', table_name='secrets')
    op.add_column(
        'snapshots',
        sa.Column('private_resource', sa.Boolean(), nullable=True),
    )
    op.drop_index('ix_snapshots_created_at', table_name='snapshots')
    op.drop_index('ix_snapshots_id', table_name='snapshots')
    op.drop_index('ix_tenants_name', table_name='tenants')
    op.drop_index('ix_users_username', table_name='users')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_tenants_name', 'tenants', ['name'], unique=True)
    op.create_index('ix_snapshots_id', 'snapshots', ['id'], unique=False)
    op.create_index(
        'ix_snapshots_created_at',
        'snapshots',
        ['created_at'],
        unique=False,
    )
    op.drop_column('snapshots', 'private_resource')
    op.create_index('ix_secrets_id', 'secrets', ['id'], unique=False)
    op.create_index(
        'ix_secrets_created_at',
        'secrets',
        ['created_at'],
        unique=False,
    )
    op.drop_column('secrets', 'private_resource')
    op.create_index('ix_roles_name', 'roles', ['name'], unique=True)
    op.create_index(
        'ix_plugins_uploaded_at',
        'plugins',
        ['uploaded_at'],
        unique=False,
    )
    op.create_index(
        'ix_plugins_package_name',
        'plugins',
        ['package_name'],
        unique=False,
    )
    op.create_index('ix_plugins_id', 'plugins', ['id'], unique=False)
    op.create_index(
        'ix_plugins_archive_name',
        'plugins',
        ['archive_name'],
        unique=False,
    )
    op.drop_column('plugins', 'private_resource')
    op.drop_constraint(
        op.f('node_instances__tenant_id_fkey'),
        'node_instances',
        type_='foreignkey',
    )
    op.drop_constraint(
        op.f('node_instances__creator_id_fkey'),
        'node_instances',
        type_='foreignkey',
    )
    op.create_index(
        'ix_node_instances_id',
        'node_instances',
        ['id'],
        unique=False,
    )
    op.drop_column('node_instances', 'private_resource')
    op.drop_column('node_instances', '_tenant_id')
    op.drop_column('node_instances', '_creator_id')
    op.drop_constraint(
        op.f('nodes__creator_id_fkey'),
        'nodes',
        type_='foreignkey',
    )
    op.drop_constraint(
        op.f('nodes__tenant_id_fkey'),
        'nodes',
        type_='foreignkey',
    )
    op.create_index('ix_nodes_type', 'nodes', ['type'], unique=False)
    op.create_index('ix_nodes_id', 'nodes', ['id'], unique=False)
    op.drop_column('nodes', 'private_resource')
    op.drop_column('nodes', '_tenant_id')
    op.drop_column('nodes', '_creator_id')
    op.drop_constraint(
        op.f('logs__creator_id_fkey'),
        'logs',
        type_='foreignkey',
    )
    op.drop_constraint(
        op.f('logs__tenant_id_fkey'),
        'logs',
        type_='foreignkey',
    )
    op.create_index('ix_logs_id', 'logs', ['id'], unique=False)
    op.alter_column('logs', 'timestamp', server_default=None, nullable=False)
    op.drop_column('logs', 'reported_timestamp')
    op.drop_column('logs', 'private_resource')
    op.drop_column('logs', '_tenant_id')
    op.drop_column('logs', '_creator_id')
    op.create_index('ix_groups_name', 'groups', ['name'], unique=True)
    op.create_index('ix_groups_ldap_dn', 'groups', ['ldap_dn'], unique=True)
    op.create_index('ix_executions_id', 'executions', ['id'], unique=False)
    op.create_index(
        'ix_executions_created_at',
        'executions',
        ['created_at'],
        unique=False,
    )
    op.drop_column('executions', 'private_resource')
    op.drop_constraint(
        op.f('events__creator_id_fkey'),
        'events',
        type_='foreignkey',
    )
    op.drop_constraint(
        op.f('events__tenant_id_fkey'),
        'events',
        type_='foreignkey',
    )
    op.create_index('ix_events_id', 'events', ['id'], unique=False)
    op.alter_column('events', 'timestamp', server_default=None, nullable=False)
    op.drop_column('events', 'reported_timestamp')
    op.drop_column('events', 'private_resource')
    op.drop_column('events', 'error_causes')
    op.drop_column('events', '_tenant_id')
    op.drop_column('events', '_creator_id')
    op.drop_constraint(
        op.f('deployments__tenant_id_fkey'),
        'deployments',
        type_='foreignkey',
    )
    op.create_index('ix_deployments_id', 'deployments', ['id'], unique=False)
    op.create_index(
        'ix_deployments_created_at',
        'deployments',
        ['created_at'],
        unique=False,
    )
    op.drop_column('deployments', 'private_resource')
    op.drop_column('deployments', '_tenant_id')
    op.drop_constraint(
        op.f('deployment_updates__tenant_id_fkey'),
        'deployment_updates',
        type_='foreignkey',
    )
    op.drop_constraint(op.f(
        'deployment_updates__creator_id_fkey'),
        'deployment_updates',
        type_='foreignkey',
    )
    op.create_index(
        'ix_deployment_updates_id',
        'deployment_updates',
        ['id'],
        unique=False,
    )
    op.create_index(
        'ix_deployment_updates_created_at',
        'deployment_updates',
        ['created_at'],
        unique=False,
    )
    op.drop_column('deployment_updates', 'private_resource')
    op.drop_column('deployment_updates', '_tenant_id')
    op.drop_column('deployment_updates', '_creator_id')
    op.drop_constraint(
        op.f('deployment_update_steps__creator_id_fkey'),
        'deployment_update_steps',
        type_='foreignkey',
    )
    op.drop_constraint(
        op.f('deployment_update_steps__tenant_id_fkey'),
        'deployment_update_steps',
        type_='foreignkey',
    )
    op.create_index(
        'ix_deployment_update_steps_id',
        'deployment_update_steps',
        ['id'],
        unique=False,
    )
    op.drop_column('deployment_update_steps', 'private_resource')
    op.drop_column('deployment_update_steps', '_tenant_id')
    op.drop_column('deployment_update_steps', '_creator_id')
    op.drop_constraint(
        op.f('deployment_modifications__creator_id_fkey'),
        'deployment_modifications',
        type_='foreignkey',
    )
    op.drop_constraint(
        op.f('deployment_modifications__tenant_id_fkey'),
        'deployment_modifications',
        type_='foreignkey',
    )
    op.create_index(
        'ix_deployment_modifications_id',
        'deployment_modifications',
        ['id'],
        unique=False,
    )
    op.create_index(
        'ix_deployment_modifications_ended_at',
        'deployment_modifications',
        ['ended_at'],
        unique=False,
    )
    op.create_index(
        'ix_deployment_modifications_created_at',
        'deployment_modifications',
        ['created_at'],
        unique=False,
    )
    op.drop_column('deployment_modifications', 'private_resource')
    op.drop_column('deployment_modifications', '_tenant_id')
    op.drop_column('deployment_modifications', '_creator_id')
    op.create_index('ix_blueprints_id', 'blueprints', ['id'], unique=False)
    op.create_index(
        'ix_blueprints_created_at',
        'blueprints',
        ['created_at'],
        unique=False,
    )
    op.drop_column('blueprints', 'private_resource')
    op.create_table(
        'owners_deployments_users',
        sa.Column(
            'deployment_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['deployment_id'],
            [u'deployments._storage_id'],
            name=u'owners_deployments_users_deployment_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'owners_deployments_users_user_id_fkey',
        )
    )
    op.create_table(
        'owners_executions_users',
        sa.Column(
            'execution_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['execution_id'],
            [u'executions._storage_id'],
            name=u'owners_executions_users_execution_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'owners_executions_users_user_id_fkey',
        )
    )
    op.create_table(
        'viewers_secrets_users',
        sa.Column(
            'secret_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['secret_id'],
            [u'secrets._storage_id'],
            name=u'viewers_secrets_users_secret_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'viewers_secrets_users_user_id_fkey',
        )
    )
    op.create_table(
        'owners_blueprints_users',
        sa.Column(
            'blueprint_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['blueprint_id'],
            [u'blueprints._storage_id'],
            name=u'owners_blueprints_users_blueprint_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'owners_blueprints_users_user_id_fkey',
        )
    )
    op.create_table(
        'viewers_deployments_users',
        sa.Column(
            'deployment_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['deployment_id'],
            [u'deployments._storage_id'],
            name=u'viewers_deployments_users_deployment_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'viewers_deployments_users_user_id_fkey',
        )
    )
    op.create_table(
        'owners_plugins_users',
        sa.Column(
            'plugin_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['plugin_id'],
            [u'plugins._storage_id'],
            name=u'owners_plugins_users_plugin_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'owners_plugins_users_user_id_fkey',
        )
    )
    op.create_table(
        'viewers_blueprints_users',
        sa.Column(
            'blueprint_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['blueprint_id'],
            [u'blueprints._storage_id'],
            name=u'viewers_blueprints_users_blueprint_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'viewers_blueprints_users_user_id_fkey',
        )
    )
    op.create_table(
        'viewers_plugins_users',
        sa.Column(
            'plugin_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['plugin_id'],
            [u'plugins._storage_id'],
            name=u'viewers_plugins_users_plugin_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'viewers_plugins_users_user_id_fkey',
        )
    )
    op.create_table(
        'viewers_snapshots_users',
        sa.Column(
            'snapshot_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['snapshot_id'],
            [u'snapshots._storage_id'],
            name=u'viewers_snapshots_users_snapshot_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'viewers_snapshots_users_user_id_fkey',
        )
    )
    op.create_table(
        'viewers_executions_users',
        sa.Column(
            'execution_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['execution_id'],
            [u'executions._storage_id'],
            name=u'viewers_executions_users_execution_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'viewers_executions_users_user_id_fkey',
        )
    )
    op.create_table(
        'owners_snapshots_users',
        sa.Column(
            'snapshot_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['snapshot_id'],
            [u'snapshots._storage_id'],
            name=u'owners_snapshots_users_snapshot_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'owners_snapshots_users_user_id_fkey',
        )
    )
    op.create_table(
        'owners_secrets_users',
        sa.Column(
            'secret_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['secret_id'],
            [u'secrets._storage_id'],
            name=u'owners_secrets_users_secret_id_fkey',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'owners_secrets_users_user_id_fkey',
        )
    )
    # ### end Alembic commands ###
