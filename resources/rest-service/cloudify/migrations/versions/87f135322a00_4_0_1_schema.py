"""4.0.1 schema

Revision ID: 87f135322a00
Revises: 2f6caf12dfd0
Create Date: 2017-04-24 21:54:53.454854

"""
from alembic import op
import sqlalchemy as sa
import manager_rest     # Adding this manually


# revision identifiers, used by Alembic.
revision = '87f135322a00'
down_revision = '2f6caf12dfd0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('owners_secrets_users')
    op.drop_table('owners_snapshots_users')
    op.drop_table('viewers_executions_users')
    op.drop_table('viewers_snapshots_users')
    op.drop_table('viewers_plugins_users')
    op.drop_table('viewers_blueprints_users')
    op.drop_table('owners_plugins_users')
    op.drop_table('viewers_deployments_users')
    op.drop_table('owners_blueprints_users')
    op.drop_table('viewers_secrets_users')
    op.drop_table('owners_executions_users')
    op.drop_table('owners_deployments_users')
    op.add_column(
        'blueprints',
        sa.Column(
            'private_resource',
            sa.Boolean(name='private_resource'),
            nullable=True,
        ),
    )
    with op.batch_alter_table('deployment_modifications') as batch_op:
        batch_op.add_column(
            sa.Column('_creator_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column('_tenant_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column(
                'private_resource',
                sa.Boolean(name='private_resource'),
                nullable=True,
            ),
        )
        batch_op.create_foreign_key(
            op.f('fk_deployment_modifications__tenant_id_tenants'),
            'tenants',
            ['_tenant_id'],
            ['id'],
            ondelete='CASCADE',
        )
        batch_op.create_foreign_key(
            op.f('fk_deployment_modifications__creator_id_users'),
            'users',
            ['_creator_id'],
            ['id'],
            ondelete='CASCADE',
        )
    with op.batch_alter_table('deployment_update_steps') as batch_op:
        batch_op.add_column(
            sa.Column('_creator_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column('_tenant_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column(
                'private_resource',
                sa.Boolean(name='private_resource'),
                nullable=True,
            ),
        )
        batch_op.create_foreign_key(
            op.f('fk_deployment_update_steps__tenant_id_tenants'),
            'tenants',
            ['_tenant_id'],
            ['id'],
            ondelete='CASCADE',
        )
        batch_op.create_foreign_key(
            op.f('fk_deployment_update_steps__creator_id_users'),
            'users',
            ['_creator_id'],
            ['id'],
            ondelete='CASCADE',
        )
    with op.batch_alter_table('deployment_updates') as batch_op:
        batch_op.add_column(
            sa.Column('_creator_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column('_tenant_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column(
                'private_resource',
                sa.Boolean(name='private_resource'),
                nullable=True,
            ),
        )
        batch_op.create_foreign_key(
            op.f('fk_deployment_updates__creator_id_users'),
            'users',
            ['_creator_id'],
            ['id'],
            ondelete='CASCADE',
        )
        batch_op.create_foreign_key(
            op.f('fk_deployment_updates__tenant_id_tenants'),
            'tenants',
            ['_tenant_id'],
            ['id'],
            ondelete='CASCADE',
        )
    with op.batch_alter_table('deployments') as batch_op:
        batch_op.add_column(
            sa.Column('_tenant_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column(
                'private_resource',
                sa.Boolean(name='private_resource'),
                nullable=True,
            ),
        )
        batch_op.create_foreign_key(
            op.f('fk_deployments__tenant_id_tenants'),
            'tenants',
            ['_tenant_id'],
            ['id'],
            ondelete='CASCADE',
        )
    with op.batch_alter_table('events') as batch_op:
        batch_op.add_column(
            sa.Column('_creator_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column('_tenant_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column(
                'error_causes',
                manager_rest.storage.models_base.JSONString(),
                nullable=True,
            ),
        )
        batch_op.add_column(
            sa.Column(
                'private_resource',
                sa.Boolean(name='private_resource'),
                nullable=True,
            ),
        )
        batch_op.add_column(
            sa.Column(
                'reported_timestamp',
                manager_rest.storage.models_base.LocalDateTime(),
                nullable=False,
            ),
        )
        batch_op.create_foreign_key(
            op.f('fk_events__tenant_id_tenants'),
            'tenants',
            ['_tenant_id'],
            ['id'],
            ondelete='CASCADE',
        )
        batch_op.create_foreign_key(
            op.f('fk_events__creator_id_users'),
            'users',
            ['_creator_id'],
            ['id'],
            ondelete='CASCADE',
        )
    op.add_column(
        'executions',
        sa.Column(
            'private_resource',
            sa.Boolean(name='private_resource'),
            nullable=True,
        ),
    )
    with op.batch_alter_table('logs') as batch_op:
        batch_op.add_column(
            sa.Column('_creator_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column('_tenant_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column(
                'private_resource',
                sa.Boolean(name='private_resource'),
                nullable=True,
            ),
        )
        batch_op.add_column(
            sa.Column(
                'reported_timestamp',
                manager_rest.storage.models_base.LocalDateTime(),
                nullable=False,
            ),
        )
        batch_op.create_foreign_key(
            op.f('fk_logs__tenant_id_tenants'),
            'tenants',
            ['_tenant_id'],
            ['id'],
            ondelete='CASCADE',
        )
        batch_op.create_foreign_key(
            op.f('fk_logs__creator_id_users'),
            'users',
            ['_creator_id'],
            ['id'],
            ondelete='CASCADE',
        )
    with op.batch_alter_table('node_instances') as batch_op:
        batch_op.add_column(
            sa.Column('_creator_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column('_tenant_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column(
                'private_resource',
                sa.Boolean(name='private_resource'),
                nullable=True,
            ),
        )
        batch_op.create_foreign_key(
            op.f('fk_node_instances__creator_id_users'),
            'users',
            ['_creator_id'],
            ['id'],
            ondelete='CASCADE',
        )
        batch_op.create_foreign_key(
            op.f('fk_node_instances__tenant_id_tenants'),
            'tenants',
            ['_tenant_id'],
            ['id'],
            ondelete='CASCADE',
        )
    with op.batch_alter_table('nodes') as batch_op:
        batch_op.add_column(
            sa.Column('_creator_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column('_tenant_id', sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column(
                'private_resource',
                sa.Boolean(name='private_resource'),
                nullable=True,
            ),
        )
        batch_op.create_foreign_key(
            op.f('fk_nodes__tenant_id_tenants'),
            'tenants',
            ['_tenant_id'],
            ['id'],
            ondelete='CASCADE',
        )
        batch_op.create_foreign_key(
            op.f('fk_nodes__creator_id_users'),
            'users',
            ['_creator_id'],
            ['id'],
            ondelete='CASCADE',
        )
    op.add_column(
        'plugins',
        sa.Column(
            'private_resource',
            sa.Boolean(name='private_resource'),
            nullable=True,
        ),
    )
    op.add_column(
        'secrets',
        sa.Column(
            'private_resource',
            sa.Boolean(name='private_resource'),
            nullable=True,
        ),
    )
    op.add_column(
        'snapshots',
        sa.Column(
            'private_resource',
            sa.Boolean(name='private_resource'),
            nullable=True,
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('snapshots') as batch_op:
        batch_op.drop_column('private_resource')
    with op.batch_alter_table('secrets') as batch_op:
        batch_op.drop_column('private_resource')
    with op.batch_alter_table('plugins') as batch_op:
        batch_op.drop_column('private_resource')
    with op.batch_alter_table('nodes') as batch_op:
        batch_op.drop_constraint(
            op.f('fk_nodes__creator_id_users'),
            type_='foreignkey',
        )
        batch_op.drop_constraint(
            op.f('fk_nodes__tenant_id_tenants'),
            type_='foreignkey',
        )
        batch_op.drop_column('private_resource')
        batch_op.drop_column('_tenant_id')
        batch_op.drop_column('_creator_id')
    with op.batch_alter_table('node_instances') as batch_op:
        batch_op.drop_constraint(
            op.f('fk_node_instances__tenant_id_tenants'),
            type_='foreignkey',
        )
        batch_op.drop_constraint(
            op.f('fk_node_instances__creator_id_users'),
            type_='foreignkey',
        )
        batch_op.drop_column('private_resource')
        batch_op.drop_column('_tenant_id')
        batch_op.drop_column('_creator_id')
    with op.batch_alter_table('logs') as batch_op:
        batch_op.drop_constraint(
            op.f('fk_logs__creator_id_users'),
            type_='foreignkey',
        )
        batch_op.drop_constraint(
            op.f('fk_logs__tenant_id_tenants'),
            type_='foreignkey',
        )
        batch_op.drop_column('reported_timestamp')
        batch_op.drop_column('private_resource')
        batch_op.drop_column('_tenant_id')
        batch_op.drop_column('_creator_id')
    with op.batch_alter_table('executions') as batch_op:
        batch_op.drop_column('private_resource')
    with op.batch_alter_table('events') as batch_op:
        batch_op.drop_constraint(
            op.f('fk_events__creator_id_users'),
            type_='foreignkey',
        )
        batch_op.drop_constraint(
            op.f('fk_events__tenant_id_tenants'),
            type_='foreignkey',
        )
        batch_op.drop_column('reported_timestamp')
        batch_op.drop_column('private_resource')
        batch_op.drop_column('error_causes')
        batch_op.drop_column('_tenant_id')
        batch_op.drop_column('_creator_id')
    with op.batch_alter_table('deployments') as batch_op:
        batch_op.drop_constraint(
            op.f('fk_deployments__tenant_id_tenants'),
            type_='foreignkey',
        )
        batch_op.drop_column('private_resource')
        batch_op.drop_column('_tenant_id')
    with op.batch_alter_table('deployment_updates') as batch_op:
        batch_op.drop_constraint(
            op.f('fk_deployment_updates__tenant_id_tenants'),
            type_='foreignkey',
        )
        batch_op.drop_constraint(
            op.f('fk_deployment_updates__creator_id_users'),
            type_='foreignkey',
        )
        batch_op.drop_column('private_resource')
        batch_op.drop_column('_tenant_id')
        batch_op.drop_column('_creator_id')
    with op.batch_alter_table('deployment_update_steps') as batch_op:
        batch_op.drop_constraint(
            op.f('fk_deployment_update_steps__creator_id_users'),
            type_='foreignkey',
        )
        batch_op.drop_constraint(
            op.f('fk_deployment_update_steps__tenant_id_tenants'),
            type_='foreignkey',
        )
        batch_op.drop_column('private_resource')
        batch_op.drop_column('_tenant_id')
        batch_op.drop_column('_creator_id')
    with op.batch_alter_table('deployment_modifications') as batch_op:
        batch_op.drop_constraint(
            op.f('fk_deployment_modifications__creator_id_users'),
            type_='foreignkey',
        )
        batch_op.drop_constraint(
            op.f('fk_deployment_modifications__tenant_id_tenants'),
            type_='foreignkey',
        )
        batch_op.drop_column('private_resource')
        batch_op.drop_column('_tenant_id')
        batch_op.drop_column('_creator_id')
    with op.batch_alter_table('blueprints') as batch_op:
        batch_op.drop_column('private_resource')
    op.create_table(
        'owners_deployments_users',
        sa.Column(
            'deployment_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['deployment_id'],
            [u'deployments._storage_id'],
            name=u'fk_owners_deployments_users_deployment_id_deployments',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_owners_deployments_users_user_id_users',
        ),
    )
    op.create_table(
        'owners_executions_users',
        sa.Column(
            'execution_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['execution_id'],
            [u'executions._storage_id'],
            name=u'fk_owners_executions_users_execution_id_executions',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_owners_executions_users_user_id_users',
        ),
    )
    op.create_table(
        'viewers_secrets_users',
        sa.Column(
            'secret_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['secret_id'],
            [u'secrets._storage_id'],
            name=u'fk_viewers_secrets_users_secret_id_secrets',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_viewers_secrets_users_user_id_users',
        ),
    )
    op.create_table(
        'owners_blueprints_users',
        sa.Column(
            'blueprint_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['blueprint_id'],
            [u'blueprints._storage_id'],
            name=u'fk_owners_blueprints_users_blueprint_id_blueprints',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_owners_blueprints_users_user_id_users',
        ),
    )
    op.create_table(
        'viewers_deployments_users',
        sa.Column(
            'deployment_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['deployment_id'],
            [u'deployments._storage_id'],
            name=u'fk_viewers_deployments_users_deployment_id_deployments',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_viewers_deployments_users_user_id_users',
        ),
    )
    op.create_table(
        'owners_plugins_users',
        sa.Column(
            'plugin_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['plugin_id'],
            [u'plugins._storage_id'],
            name=u'fk_owners_plugins_users_plugin_id_plugins',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_owners_plugins_users_user_id_users',
        ),
    )
    op.create_table(
        'viewers_blueprints_users',
        sa.Column(
            'blueprint_id',
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['blueprint_id'],
            [u'blueprints._storage_id'],
            name=u'fk_viewers_blueprints_users_blueprint_id_blueprints',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_viewers_blueprints_users_user_id_users',
        ),
    )
    op.create_table(
        'viewers_plugins_users',
        sa.Column(
            'plugin_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['plugin_id'],
            [u'plugins._storage_id'],
            name=u'fk_viewers_plugins_users_plugin_id_plugins',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_viewers_plugins_users_user_id_users',
        ),
    )
    op.create_table(
        'viewers_snapshots_users',
        sa.Column(
            'snapshot_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['snapshot_id'],
            [u'snapshots._storage_id'],
            name=u'fk_viewers_snapshots_users_snapshot_id_snapshots',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_viewers_snapshots_users_user_id_users',
        ),
    )
    op.create_table(
        'viewers_executions_users',
        sa.Column(
            'execution_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['execution_id'],
            [u'executions._storage_id'],
            name=u'fk_viewers_executions_users_execution_id_executions',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_viewers_executions_users_user_id_users',
        ),
    )
    op.create_table(
        'owners_snapshots_users',
        sa.Column(
            'snapshot_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['snapshot_id'],
            [u'snapshots._storage_id'],
            name=u'fk_owners_snapshots_users_snapshot_id_snapshots',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_owners_snapshots_users_user_id_users',
        ),
    )
    op.create_table(
        'owners_secrets_users',
        sa.Column(
            'secret_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ['secret_id'],
            [u'secrets._storage_id'],
            name=u'fk_owners_secrets_users_secret_id_secrets',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            [u'users.id'],
            name=u'fk_owners_secrets_users_user_id_users',
        ),
    )
    # ### end Alembic commands ###
