version: 2

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi


defaults:
  - &cache_key v1-tox-env-{{ .Environment.TOX_CONFIG }}-{{ .Environment.DO_ENV }}-{{ checksum "deps_files" }}

  - &tox_defaults
    docker:
      - image: circleci/python:2.7

        environment:
          TOX_CONFIG: ./rest-service

    steps:
      - checkout

      - run: cat "${TOX_CONFIG}/"{setup.py,dev-requirements.txt,tox.ini} > deps_files
      - restore_cache:
          key: *cache_key

      - run: sudo apt-get install libldap-dev libsasl2-dev
      - run: pip install --user tox

      - run: python -m tox -c $TOX_CONFIG/tox.ini -e $DO_ENV

      - save_cache:
          key: *cache_key
          paths:
            - $TOX_CONFIG/.tox/$DO_ENV


jobs:

  flake8:
    <<: *tox_defaults

    steps:
      - checkout
      - run: pip install --user flake8
      - run: python -m flake8 plugins/riemann-controller/ workflows/ rest-service/ tests/

  test_v1:
    <<: *tox_defaults
    environment:
      DO_ENV: clientV1-endpoints,clientV1-infrastructure

  test_clientv2_endpoints:
    <<: *tox_defaults
    environment:
      DO_ENV: clientV2-endpoints

  test_clientv2_infrastructure:
    <<: *tox_defaults
    environment:
      DO_ENV: clientV2-infrastructure

  test_clientv2_1_endpoints:
    <<: *tox_defaults
    environment:
      DO_ENV: clientV2_1-endpoints

  test_clientv2_1_infrastructure:
    <<: *tox_defaults
    environment:
      DO_ENV: clientV2_1-infrastructure

  test_clientv3_endpoints:
    <<: *tox_defaults
    environment:
      DO_ENV: clientV3-endpoints

  test_clientv3_infrastructure:
    <<: *tox_defaults
    environment:
      DO_ENV: clientV3-infrastructure

  test_workflows:
    <<: *tox_defaults
    environment:
      TOX_CONFIG: ./workflows
      DO_ENV: py27


  rest-service-rpm:
    machine:
      enabled: true

    steps:
      - checkout
      - run: docker run --cap-add SYS_ADMIN --security-opt apparmor:unconfined --mount type=bind,source="$(pwd)",target=/source cloudify3/mock-builder:0.1 python /source/packaging/build_rpm.py /source/packaging/cloudify-rest-service.spec
      - run: mkdir result
      - run: mv packaging/*.rpm result

      - store_artifacts:
          path: result
          destination: result

  restore-cache:
    <<: *tox_defaults
    steps:
      - checkout

      - restore_cache:
          key: *cache_key

      - run: touch /tmp/tox

      - persist_to_workspace:
          root: /tmp
          paths:
            - tox

  save-cache:
    <<: *tox_defaults
    steps:
      - attach_workspace:
          at: /tmp

      - save_cache:
          key: *cache_key
          paths:
            - /tmp/tox


workflows:
  version: 2

  build_and_test:
    jobs:
      - flake8
      - rest-service-rpm

      - test_v1
      - test_clientv2_endpoints
      - test_clientv2_infrastructure
      - test_clientv2_1_endpoints
      - test_clientv2_1_infrastructure
      - test_clientv3_endpoints
      - test_clientv3_infrastructure
      - test_workflows
