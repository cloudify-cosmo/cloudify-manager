# test blueprint for checking the update flow. This contains several nodes,
# each with a different setup, and when we run the update workflow on a
# deployment created from this blueprint (with changing an input), each node
# will have some operations called on it, and we'll assert that the operations
# are as expected.

tosca_definitions_version: cloudify_dsl_1_3

imports:
  - minimal_types.yaml

inputs:
  inp1: {}

node_types:
  t1:
    properties:
      expected_calls:
        type: list
      prop1:
        default: prop1_default

relationships:
  cloudify.relationships.depends_on:
    properties:
      connection_type:
        default: all_to_all

node_templates:
  # n1 has not changed, and check_drift returns null:
  # only check_drift is called, but not update
  n1:
    type: t1
    properties:
      expected_calls:
        - check_drift
    interfaces:
      cloudify.interfaces.lifecycle:
        check_drift:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        update:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  # n2 has changed, and doesn't declare check_drift:
  # update is called
  n2:
    type: t1
    properties:
      prop1: {get_input: inp1}
      expected_calls:
        - update
    interfaces:
      cloudify.interfaces.lifecycle:
        update:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  # n3 has not changed, and doesn't declare check_drift:
  # update is not called
  n3:
    type: t1
    properties:
      expected_calls: []
    interfaces:
      cloudify.interfaces.lifecycle:
        update:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  # n4 has not changed, but check_drift reports drift:
  # update is called (create is defined but not called)
  n4:
    type: t1
    properties:
      expected_calls:
        - check_drift
        - update
    interfaces:
      cloudify.interfaces.lifecycle:
        check_drift:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
          inputs:
            return_value: {drift: true}
        create:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        update:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  # n5 has not changed, but check_drift reports drift, and update is not defined:
  # instance is reinstalled
  n5:
    type: t1
    properties:
      expected_calls:
        - check_drift
        - create
    interfaces:
      cloudify.interfaces.lifecycle:
        check_drift:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
          inputs:
            return_value: {drift: true}
        create:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  # n6 has not changed, but check_drift reports drift, and update fails:
  # update is called, but since it failed, instance is reinstalled
  n6:
    type: t1
    properties:
      expected_calls:
        - check_drift
        - update
        - create
    interfaces:
      cloudify.interfaces.lifecycle:
        check_drift:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
          inputs:
            return_value: {drift: true}
        update:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
          inputs:
            fail: true
        create:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  # n7 has not changed, but check_drift fails:
  # instance is reinstalled
  n7:
    type: t1
    properties:
      expected_calls:
        - check_drift
        - create
    interfaces:
      cloudify.interfaces.lifecycle:
        check_drift:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
          inputs:
            fail: true
        update:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        create:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  # n8_rel_target doesn't do anything by itself, but is a target of n8's relationship
  n8_rel_target:
    type: t1
    properties:
      expected_calls:
        - target_check_drift
        - target_update

  # n8 doesn't declare check_drift, and has not changed, but a relationship
  # declares check_drift and update for both source and target:
  n8:
    type: t1
    properties:
      expected_calls:
        - source_check_drift
        - source_update
    relationships:
      - target: n8_rel_target
        type: cloudify.relationships.depends_on
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            check_drift:
              implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
              inputs:
                return_value: {drift: true}
            update: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        target_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            check_drift:
              implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
              inputs:
                return_value: {drift: true}
            update: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  # n9_rel_target doesn't do anything by itself, but is a target of n9's relationship
  n9_rel_target:
    type: t1
    properties:
      expected_calls:
        - target_check_drift

  # n9 doesn't declare check_drift, and has not changed, but a relationship
  # declares check_drift - there's no relationship drift: only check_drift is called
  n9:
    type: t1
    properties:
      expected_calls:
        - source_check_drift
    relationships:
      - target: n9_rel_target
        type: cloudify.relationships.depends_on
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            check_drift: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
            update: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        target_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            check_drift: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
            update: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  # n10_rel_target doesn't do anything by itself, but is a target of n10's relationship.
  # the check_drift relationship operation fails, so it is reinstalled
  n10_rel_target:
    type: t1
    properties:
      expected_calls:
        - target_check_drift
        - create
    interfaces:
      cloudify.interfaces.lifecycle:
        create: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  # n10 declares a relationship check_drift that fails: the whole node is reinstalled
  n10:
    type: t1
    properties:
      expected_calls:
        - source_check_drift
        - create
    interfaces:
      cloudify.interfaces.lifecycle:
        create: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
    relationships:
      - target: n10_rel_target
        type: cloudify.relationships.depends_on
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            check_drift:
              implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
              inputs:
                fail: true
            update: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        target_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            check_drift:
              implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
              inputs:
                fail: true
            update: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op

  n11_rel_target:
    type: t1
    properties:
      expected_calls:
        - target_check_drift
        - target_update

  # n11 reports drift on both itself, and its relationship, and has all the update
  # interfaces run.
  # This node just showcases _all_ the relevant operations.
  n11:
    type: t1
    properties:
      expected_calls:
        - check_drift
        - source_check_drift
        - preupdate
        - update
        - postupdate
        - update_config
        - update_apply
        - update_postapply
        - source_update
    interfaces:
      cloudify.interfaces.lifecycle:
        check_drift:
          implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
          inputs:
            return_value: {drift: true}
        preupdate: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        update: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        postupdate: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        update_config: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        update_apply: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        update_postapply: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
    relationships:
      - target: n11_rel_target
        type: cloudify.relationships.depends_on
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            check_drift:
              implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
              inputs:
                return_value: {drift: true}
            update: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
        target_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            check_drift:
              implementation: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
              inputs:
                return_value: {drift: true}
            update: builtin.cloudify_system_workflows.tests.deployment_update.test_workflow.op
