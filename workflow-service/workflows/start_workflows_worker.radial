define start_workflows_worker

  set 'v:worker_payload': {
    properties: {
      workflows_worker: true
    }
  }

  set 'v:plugin_payload': {
    properties: {
      plugin: {
        url: "https://github.com/dankilman/cloudify-workflows/archive/master.zip"
      }
    }
  }

  sequence if: '${plan.is_management_plugins_to_install} == true'
      log message: 'installing workflows worker for deployment ${deployment_id}'
      event event: { "stage" => "Installing workflows worker" }
      execute_task target: 'cloudify.management', exec: "worker_installer.tasks.install", payload: '$v:worker_payload'

      log message: 'starting workflows worker for deployment ${deployment_id}'
      event event: { "stage" => "Starting workflows worker" }
      execute_task target: 'cloudify.management', exec: "worker_installer.tasks.start", payload: '$v:worker_payload'

      log message: 'installing workflows plugin for deployment ${deployment_id}'
      event event: { "stage" => "Installing management workflows plugin" }

      log message: 'installing workflows plugin on workflows worker: ${deployment_id}'
      event event: { "stage" => "Installing workflows plugin" }
      execute_task target: '${deployment_id}_workflows', exec: "plugin_installer.tasks.install", payload: '$v:plugin_payload'
      log message: 'successfully installed workflows plugin on workflows worker: ${deployment_id}'

      log message: 'restarting workflows worker for deployment ${deployment_id}'
      execute_task target: 'cloudify.management', exec: "worker_installer.tasks.restart", payload: '$v:worker_payload'
