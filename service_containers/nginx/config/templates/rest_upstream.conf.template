upstream cloudify-rest {
  server rest_service:${REST_SERVICE_PORT};
}

upstream fileserver {
  server fileserver:${FILESERVER_PORT};
}

upstream cloudify-stage {
  server stage_frontend:8188;
}


upstream cloudify-stage-backend {
  server stage_backend:8088;
}

# REST and UI external server
server {
  # server listening for external requests
  listen              443 ssl;

  server_name         _;

  ssl_certificate     /etc/cloudify/ssl/cloudify_external_cert.pem;
  ssl_certificate_key /etc/cloudify/ssl/cloudify_external_key.pem;

  include "/etc/nginx/conf.d/logs-conf.cloudify";

  # Serves the Rest Service (backed by the cloudify-rest upstream).
  include "/etc/nginx/conf.d/rest-location.cloudify";

  # Serves the Fileserver.
  include "/etc/nginx/conf.d/fileserver.cloudify";
  include "/etc/nginx/conf.d/ui-locations.cloudify";
}

# like the above, but on 80, without ssl. While still in development, we'd like
# this easy mode of accessing the manager (especially using cfy).
server {
  listen              80;
  server_name         _;
  include "/etc/nginx/conf.d/logs-conf.cloudify";
  include "/etc/nginx/conf.d/rest-location.cloudify";
  include "/etc/nginx/conf.d/fileserver.cloudify";
  include "/etc/nginx/conf.d/ui-locations.cloudify";
}

# REST and UI internal server - always SSL enabled
server {
  # server listening for internal requests
  listen              53333 ssl default_server;


  server_name         _;

  ssl_certificate     /etc/cloudify/ssl/cloudify_internal_cert.pem;
  ssl_certificate_key /etc/cloudify/ssl/cloudify_internal_key.pem;

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  include "/etc/nginx/conf.d/logs-conf.cloudify";

  # Serves the Rest Service (backed by the cloudify-rest upstream).
  include "/etc/nginx/conf.d/rest-location.cloudify";

  # Serves the Fileserver.
  include "/etc/nginx/conf.d/fileserver.cloudify";
}
